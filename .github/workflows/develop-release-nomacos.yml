name: DevelopReleaseNoMacos

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      plugin_list:
        description: 'Plugins to include'
        required: false
        default: ''
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # Installation of dependencies is too OS-dependent now, we don't
  # miss that much by particularizing this in a per-OS basis.
  
  build-linux-appimage:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Setup interactive shell session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

    - name: Install dependencies
      uses: "./.github/actions/linuxdeps"
      
    - name: Build & Distribute (SigDigger)
      run: |
        cd Scripts
        chmod a+x dist-appimage.sh
        export LD_LIBRARY_PATH="$LD_LIBRARY_PATH":"$PWD"/deploy-root/lib
        SIGDIGGER_EMBED_SOAPYSDR=1 BUILDTYPE=Debug ./dist-appimage.sh ${{ github.event.inputs.plugin_list }}
        cd ..

    - name: Archive AppImage files
      uses: actions/upload-artifact@v4
      with:
        name: linux-latest-appimage
        path: Scripts/*.AppImage

  # Windows
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        uses: "./.github/actions/win32deps"
        
      # SigDigger
      - name: Build & Distribute (SigDigger)
        run: |
          cd Scripts
          chmod a+x dist-mingw32.sh
          BUILDTYPE=Release BRANCH=master ./dist-mingw32.sh
          cd ..

      - name: Archive .ZIP files
        uses: actions/upload-artifact@v4
        with:
          name: windows-latest-zip
          path: Scripts/SigDigger-*.zip

  do_release:
    needs: [ build-linux-appimage,  build-windows ]
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Download binaries
        uses: actions/download-artifact@v4

      - name: Deploy 'latest' release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "SigDigger Development Build (${{steps.date.outputs.date}}, Windows and GNU/Linux)"
          files: |
            linux-latest-appimage/*.AppImage
            windows-latest-zip/*.zip
